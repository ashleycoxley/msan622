multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.1, .8))
multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .1))
multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
scale_y_continuous(format=percent)
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
scale_y_continuous(formatter=percent)
multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
scale_y_continuous(formatter="percent")
multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
scale_y_continuous(label = "percent")
multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
scale_y_continuous(labels = "percent")
multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
scale_y_continuous(formatter = "percent")
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
ggsave(file='/Users/ashley/Desktop/Data_Visualization/inclass_ex.png', height=6, width=9)
multiline
multiline <- ggplot(subset(melted_guns, variable %in% c('Florida', 'US')),
aes(x=Year, y=value, group=factor(variable), color=factor(variable))) +
geom_line() +
ggtitle("Gun Deaths") +
xlab("Year") +
ylab("Proportion of Homicides Attributable to Guns") +
theme(legend.position=c(.9, .9)) +
ggsave(file='/Users/ashley/Desktop/Data_Visualization/inclass_ex.png', height=6, width=9)
#facet_wrap( ~ year, ncol = 3)
multiline
guns$Florida <- guns$Florida.Handguns / guns$Florida.Population
guns$US <- guns$National.Handguns / ((guns$National.Population)*1000000)
guns$Florida
0.744^2 + (-0.410)^2 + (-0.020)^2
0.744^2 + (0.410)^2 + (0.020)^2
0.744^2 + (-0.410^2) + (-0.020^2)
0.698^2 + 0.153^2 + 0.084^2
1 - 0.518
wine <- read.csv(file.choose())
head(wine)
wine <- wine[,2:ncol(wine)]
head(wine)
wine_anal <- factanal(wine, 3)
wine_anal
wine_pca <- princomp(~., data=wine)
wine_pca
wine_pca <- princomp(~., data=wine, cor=F)
wine_pca
wine_pca <- princomp(~., data=wine, cor=T)
wine_pca
wine_pca <- princomp(~., data=wine)
wine_pca
library(psych)
wine_fa <- principal(~., data=wine, 3, rotate=varimax)
library(nlme)
corMatrix(wine)
cor(wine)
wine_cor <- cor(wine)
wine_fa <- fa(wine_cor, 3, rotate='varimax')
install.packages("GPArotation")
wine_fa <- fa(wine_cor, 3, rotate='varimax')
wine_fa
.05^2 + .8^2 + .06^2
protein <- read.csv('/Users/ashley/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountries/ProteinConsumptionEuropeanCountries.csv')
protein_pca <- princomp(~RedMeat + WhiteMeat + Eggs + Milk + Fish + Cereals + Starch + Nuts + Fr.Veg, data=protein)
screeplot(protein_pca, type='line')
summary(protein_pca)
protein_pca$sd^2
protein_pca
protein_fa <- factanal(protein[,2:ncol(protein)], factors=3)
protein_fa
protein_fa <- factanal(protein[,2:ncol(protein)], factors=3, rotation="varimax")
protein_fa
body <-read.csv('/Users/ashley/Dropbox/HamrickDataSets/CrossSectionalRegression/BodyFatPercentage/BodyFatPercentage.csv')
head(body)
body <- body[, c(2:3, 5:ncol(body)]
body <- body[, c(2:3, 5:ncol(body))]
head(body)
bodyPCA <- princomp(~., data=body)
bodyPCA
summary(bodyPCA)
summary(bodyPCA)
bodyPCA <- princomp(~., data=body, cov=T)
scaled_body <- scale(body)
bodyPCA <- princomp(~., data=scaled_body)
scaled_body <- data.frame(scale(body))
bodyPCA <- princomp(~., data=scaled_body)
summary(bodyPCA)
screeplot(bodyPCA, type='line')
body_fa <- factanal(scaled_body, factors=3, rotation="varimax")
body_fa <- factanal(body, factors=3, rotation="varimax")
body_fa <- factanal(scaled_body, factors=2, rotation="varimax")
body_fa <- factanal(scaled_body, factors=7, rotation="varimax")
body_fa <- factanal(scaled_body, factors=4, rotation="varimax")
body_fa <- factanal(scaled_body, factors=5, rotation="varimax")
summary(body_fa)
body_fa
body_fa <- factanal(scaled_body, factors=2, rotation="varimax")
body_fa
body_raw <-read.csv('/Users/ashley/Dropbox/HamrickDataSets/CrossSectionalRegression/BodyFatPercentage/BodyFatPercentage.csv')
head(body_raw)
body_model1 <- lm(BODYFAT~DENSITY+AGE+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=raw_body)
body_model1 <- lm(BODYFAT~DENSITY+AGE+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=body_raw)
body_fa
body_fa <- factanal(scaled_body, factors=4, rotation="varimax")
body_fa <- factanal(scaled_body, factors=5, rotation="varimax")
body_fa
body_fa$Factor1
body_fa$Loadings
body_fa[0]
typeof(body_fa)
psych <- read.csv('/Users/ashley/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/CorrelationMatrixTwentyFourPsychologicalTests/CorrelationMatrixTwentyFourPsychologicalTests.csv')
str(body_fa)
head(body_fa$loadings)
as.matrix(scaled_body) %*% body_fa$loadings
body_factors <- as.matrix(scaled_body) %*% body_fa$loadings
psych
psych <- read.csv('/Users/ashley/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/CorrelationMatrixTwentyFourPsychologicalTests/CorrelationMatrixTwentyFourPsychologicalTests.csv', header=F)
head(psych)
psych_eig <- eigen(psych)
psych_eig
screeplot(psych_eig$values, type='line')
plot(psych_eig$values, type='line')
psych_pcs <- psych_eig$vectors[,1:5]
head(psych_pcs)
psych_varimax <- varimax(psych_pcs)
psych_varimax
psych_promax <- promax(psych_pcs)
protein_fa
bodyPCA
body_fa
screeplot(bodyPCA, type='line')
psych_pcs
psych_varimax
psych_promax <- promax(psych_pcs)
psych_promax
plot(psych_eig$values, type='line')
plot(psych_eig$values)
plot(psych_eig$values, type='line')
micro <- read.csv('/Users/ashley/Dropbox/HamrickDataSets/CourseFolders/MSFA744/HomeworkTwo/MicrosoftFactorData.csv')
head(micro)
microPCA <- princomp(~USTB3M + USTB6M + USTB1Y + USTB3Y + USTB5Y + USTB10Y, data=micro)
summary(microPCA)
screeplot(microPCA, type='line')
microPCA$loadings
microPC1 <- microPCA$loadings[1:3]
microPC1
microPC1 <- microPCA$loadings[,1:3]
microPC1
micro_varimax <- varimax(microPC1)
micro_varimax
head(micro)
new_micro <- micro[,6:11]
head(new_micro)
new_micro <- micro[,c(1, 6:11)]
head(new_micro)
tail(new_micro)
tyoeof(new_micro$Date)
typeof(new_micro$Date)
str(new_micro$Date)
as.numeric(new_micro$Date)
new_micro <- micro[,c(1, 6:11)]
new_micro
new_micro <- micro[167:nrow(micro),c(1, 6:11)]
new_micro
new_micro <- micro[167:nrow(micro),c(1, 6:11)]
new_micro <- micro[167:254,c(1, 6:11)]
new_micro
install.packages(quantmod)
install.packages('quantmod')
PTTAX <- monthlyReturn(PTTAX, subset='2000:2007')
library(quantmod)
PTTAX <- monthlyReturn(PTTAX, subset='2000:2007')
PTTAX <- monthlyReturn('PTTAX', subset='2000:2007')
PTTAX
PTTAX <- monthlyReturn(PTTAX)
PTTAX <- monthlyReturn(NHYMX)
monthlyReturn(NHYMX)
monthlyReturn('NHYMX)
monthlyReturn('NHYMX)
monthlyReturn('NHYMX')
pttax <- read.csv(file.choose('/Users/ashley/Desktop/Multivariate_Stats/pttax.csv'))
pttax <- read.csv('/Users/ashley/Desktop/Multivariate_Stats/pttax.csv')
cfnlx <- read.csv('/Users/ashley/Desktop/Multivariate_Stats/cfnlx.csv')
nhymx <- read.csv('/Users/ashley/Desktop/Multivariate_Stats/nhymx.csv')
pttax
pttax <- pttax$Adj.Close
pttax <- pttax$Adj.Close
head(pttax)
head(nhymx)
nhymx <- nhymx$Adj.Close
head(cfnlx)
cfnlx <- cfnlx$Adj.Close
head(new_micro)
new_micro$pttax <- pttax
new_micro$nhymx <- nhymx
new_micro$cfnlx <- cfnlx
head(new_micro)
new_micro$pttax <- rev(pttax)
new_micro$nhymx <- rev(nhymx)
new_micro$cfnlx <- rev(cfnlx)
head(new_micro)
new_micro <- cbind(new_micro, micro_varimax)
new_micro
micro_varimax$loadings
str(micro_varimax)
scores(micro_varmix)
scores(micro_varimax)
as.matrix(new_micro[,2:7]) %*% micro_varimax$loadings
new_micro <- cbind(new_micro, as.matrix(new_micro[,2:7]) %*% micro_varimax$loadings)
head(new_micro)
pttax_mod <- lm(pttax ~ Comp.1 + Comp.2 + Comp.3, new_micro)
pttax_mod <- lm(pttax ~ Comp.1 + Comp.2 + Comp.3, new_micro)
nhymx_mod <- lm(nhymx ~ Comp.1 + Comp.2 + Comp.3, new_micro)
cfnlx_mod <- lm(cfnlx ~ Comp.1 + Comp.2 + Comp.3, new_micro)
summary(pttax_mod)
summary(nhymx_mod)
summary(cfnlx_mod)
b <- as.matrix(c(1.0, .63, .45, .63, 1.0, .35, .45, .35, 1.0), nrow=3)
b
b <- as.matrix(1.0, .63, .45, .63, 1.0, .35, .45, .35, 1.0, nrow=3)
b
b <- as.matrix(c(1.0, .63, .45, .63, 1.0, .35, .45, .35, 1.0), nrow=3)
b
b <- as.matrix(c(1.0, .63, .45, .63, 1.0, .35, .45, .35, 1.0), nrow=3, ncol=3)
b
b <- c(1.0, .63, .45, .63, 1.0, .35, .45, .35, 1.0)
b <- as.matrix(b, nrow=3)
b
b <- matrix(b, nrow=3)
b
b <- matrix(c(1.0, .63, .45, .63, 1.0, .35, .45, .35, 1.0), nrow=3)
b
a %*% b
a <- c(.9, .7, .5)
a %*% b
b %*% a
body_model1 <- lm(BODYFAT~DENSITY+AGE+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=body_raw)
summary(body_model1)
body_appended <- cbind(scaled_body, bodyfactors)
body_factors <- as.matrix(scaled_body) %*% body_fa$loadings
body_appended <- cbind(scaled_body, bodyfactors)
body_appended <- cbind(scaled_body, body_factors)
head(body_appended)
body_model2 <- lm(Factor1~DENSITY+AGE+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=body_raw)
body_model2 <- lm(Factor1~DENSITY+AGE+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=scaled_body)
body_model2 <- lm(Factor1~DENSITY+AGE+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=body_appended)
body_model2 <- lm(Factor1~DENSITY+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=body_appended)
body_model3 <- lm(Factor2~DENSITY+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=body_appended)
body_model4 <- lm(Factor3~DENSITY+WEIGHT+HEIGHT+NECK+CHEST+ABDOMEN+HIP+THIGH+KNEE+ANKLE+BICEPS+FOREARM+WRIST, data=body_appended)
summary(body_model2)
summary(body_model3)
summary(body_model4)
craigs <- read.csv('/Users/ashley/Desktop/Data_Visualization/msan622/project-prototype/craigs_parsed_w_item.csv', header=F)
colnames(craigs) <- c('url', 'region', 'neighborhood', 'title', 'text', 'item')
craigs$text <- as.character(craigs$text)
# remove santa cruz
craigs <- subset(craigs, region != 'scz')
craigs$region <- factor(craigs_minus$region)
craigs$region <- factor(craigs$region)
View(craigs)
craigs <- craigs[,-2]
View(craigs)
craigs$url <- NULL
View(craigs)
setwd('/Users/ashley/Desktop/Data_Visualization/msan622/project-prototype/')
library(shiny)
runApp()
library(ggplot2)
library(tm)
library(reshape)
library(ggmap)
library(maptools)
library(sp)
library(rgdal)
library(ggmap)
gpclibPermit()
runApp()
runApp()
getData <- function() {
file <- 'craigs_parsed_w_item.csv'
craigs <- read.csv(file, header=F)
colnames(craigs) <- c('region', 'neighborhood', 'title', 'text', 'item')
craigs_minus <- subset(craigs, region != 'scz')
craigs_minus$region <- factor(craigs_minus$region)
# stem titles
craigs_minus[,6] <- as.character(craigs_minus[,6])
stemmed_items <- lapply(craigs_minus[,6], stemDocument)
craigs_minus$item <- unlist(stemmed_items)
# get frequencies
region_freq <- as.data.frame(table(craigs_minus$item, craigs_minus$region))
colnames(region_freq) <- c('word', 'region', 'regionfreq')
freqs <- cast(region_freq, word~region, value='regionfreq')
freqs$overall <- rowSums(freqs)
# order words by overall frequency
ordered <- freqs[order(freqs$overall, decreasing=TRUE), ]
ordered$word <- factor(ordered$word, levels = ordered$word)
return(ordered)
}
craigs <- getData()
getData <- function() {
file <- 'craigs_parsed_w_item.csv'
craigs <- read.csv(file, header=F)
colnames(craigs) <- c('region', 'neighborhood', 'title', 'text', 'item')
print(head(craigs))
craigs_minus <- subset(craigs, region != 'scz')
craigs_minus$region <- factor(craigs_minus$region)
# stem titles
craigs_minus[,6] <- as.character(craigs_minus[,6])
stemmed_items <- lapply(craigs_minus[,6], stemDocument)
craigs_minus$item <- unlist(stemmed_items)
# get frequencies
region_freq <- as.data.frame(table(craigs_minus$item, craigs_minus$region))
colnames(region_freq) <- c('word', 'region', 'regionfreq')
freqs <- cast(region_freq, word~region, value='regionfreq')
freqs$overall <- rowSums(freqs)
# order words by overall frequency
ordered <- freqs[order(freqs$overall, decreasing=TRUE), ]
ordered$word <- factor(ordered$word, levels = ordered$word)
return(ordered)
}
craigs <- getData()
craigs <- getData()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Desktop/Data_Visualization/msan622/project-prototype/ui.r')
craigs <- getData()
library(ggplot2)
library(tm)
library(reshape)
library(ggmap)
library(maptools)
library(sp)
library(rgdal)
library(ggmap)
gpclibPermit()
getData <- function() {
file <- 'craigs_parsed_w_item.csv'
craigs <- read.csv(file, header=F)
colnames(craigs) <- c('region', 'neighborhood', 'title', 'text', 'item')
craigs_minus <- subset(craigs, region != 'scz')
craigs_minus$region <- factor(craigs_minus$region)
# stem titles
craigs_minus[,5] <- as.character(craigs_minus[,5])
stemmed_items <- lapply(craigs_minus[,5], stemDocument)
craigs_minus$item <- unlist(stemmed_items)
# get frequencies
region_freq <- as.data.frame(table(craigs_minus$item, craigs_minus$region))
colnames(region_freq) <- c('word', 'region', 'regionfreq')
freqs <- cast(region_freq, word~region, value='regionfreq')
freqs$overall <- rowSums(freqs)
# order words by overall frequency
ordered <- freqs[order(freqs$overall, decreasing=TRUE), ]
ordered$word <- factor(ordered$word, levels = ordered$word)
return(ordered)
}
craigs <- getData()
freqs <- getFreq()
getFreq <- function() {
file <- 'posting_freqs.csv'
post_freq <- read.csv(file, header=T)
return(post_freq)
}
freqs <- getFreq()
View(freqs)
View(craigs)
runApp()
library(shiny)
setwd('/Users/ashley/Desktop/Data_Visualization/msan622/project-prototype/')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
subset(craigs, word=='chair')
subset(craigs, word %in% 'chair', 'dirt')
subset(craigs, word == c('chair', 'dirt')
)
subset(craigs, word %in% c('chair', 'dirt'))
ratios <- ggplot(subset(craigs, word %in% c('chair', 'dirt')), aes(x=region, y=word, fill=word)) +
geom_bar()
ratios
ratios <- ggplot(subset(craigs, word %in% c('chair', 'dirt')), aes(x=word, fill=word)) +
geom_bar()
ratios
melted_craigs <- melt(craigs)
View(melted_craigs)
ratios <- ggplot(subset(craigs, word %in% c('chair', 'dirt')), aes(x=region, fill=word)) +
geom_bar()
ratios
ratios <- ggplot(subset(melted_craigs, word %in% c('chair', 'dirt')), aes(x=region, fill=word)) +
geom_bar()
ratios
ratios <- ggplot(subset(melted_craigs, word %in% c('chair', 'dirt')), aes(x=region, y=value, fill=word)) +
geom_bar()
ratios
ratios <- ggplot(subset(craigs, word %in% c('chair', 'dirt')), aes(x=region, y=word, fill=word)) +
geom_bar(position='fill')
ratios
ratios <- ggplot(subset(melted_craigs, word %in% c('chair', 'dirt')), aes(x=region, y=word, fill=word)) +
geom_bar(position='fill')
ratios
ratios <- ggplot(subset(melted_craigs, word %in% c('chair', 'dirt')), aes(x=region, y=word, fill=word)) +
geom_bar()
ratios <- ggplot(subset(melted_craigs, word %in% c('chair', 'dirt')), aes(x=region, y=value, fill=word)) +
geom_bar(position='fill')
ratios
ratios <- ggplot(subset(melted_craigs, word %in% c('chair', 'dirt')),
aes(x=region, y=value, fill=word)) +
geom_bar(position='fill') +
coord_flip()
ratios
ratios <- ggplot(subset(melted_craigs, word %in% c('chair', 'dirt')),
aes(x=region, y=value, fill=word)) +
geom_bar(position='fill', stat='identity') +
coord_flip()
ratios
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(craigs)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
